# Generated by Django 4.2.6 on 2023-11-07 12:06

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("uploader", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=150, verbose_name="first name")),
                ("last_name", models.CharField(blank=True, max_length=150, verbose_name="last name")),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("nome", models.CharField(max_length=50)),
                ("idade", models.DecimalField(decimal_places=2, default=16, max_digits=10)),
                (
                    "genero",
                    models.IntegerField(
                        choices=[(1, "Homem"), (2, "Mulher"), (3, "Prefiro não comentar")],
                        default=3,
                        verbose_name="Gênero",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True, verbose_name="e-mail address")),
                ("cpf", models.CharField(blank=True, max_length=11, null=True, verbose_name="CPF")),
                ("telefone", models.CharField(blank=True, max_length=11, null=True, verbose_name="Phone")),
                (
                    "user",
                    models.IntegerField(
                        choices=[(1, "Funcionario"), (2, "Cliente")], default=2, verbose_name="Tipo de Usuário"
                    ),
                ),
                ("data_nascimento", models.DateField(blank=True, null=True, verbose_name="Birth Date")),
                ("notificacao", models.BooleanField(default=True)),
                (
                    "capa",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="uploader.image",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuário",
                "verbose_name_plural": "Usuários",
                "ordering": ["-date_joined"],
            },
        ),
    ]
